@import '../../App.scss';

.splitview {
  width: 100vw;
  max-width: min(1080px, 100%);
  margin: 0 auto; // Center `.splitview` if the viewport is wider than 1080px
  padding: 25px;
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  gap: 50px;

  h1, h2, h3 {
    @include mobile {
      text-align: center;
    }
  }

  @include mobile() {
    flex-direction: column;
    padding: 0;
  }

  .contactInfo, .formContainer {
    flex: 1; // This ensures both take up equal space within `.splitview`
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: stretch;
    gap: 25px;
  }

  .formContainer {
    position: relative;
  }

  .contactInfo {
    .wrapper {
      padding: 25px;
      border-radius: 8px;
      color: white !important;
      background-color: var(--accent2);
      box-shadow: 5px 5px 5px rgba(0,0,0,0.25);
      -webkit-box-shadow: 5px 5px 5px rgba(0,0,0,0.25);
      -moz-box-shadow: 5px 5px 5px rgba(0,0,0,0.25);

      p, a {
        @include mobile {
          text-align: center;
        }
      }

      @include mobile {
        display: flex;
        flex-direction: column;
        justify-content: center;
      }

      p, label {
        font-size: clamp(1.3em, 2.1vw, 1.8em) !important;
      }

      a:hover {
        color: white !important;
      }

      /* Apply now CTA */
      div {
        padding-top: 25px;
        display: flex;
        align-items: center;
        gap: 15px;

        @include mobile {
          width: 100%;
          justify-content: center;
        }
      }
    }
    .office {
      width: 100%;
      @include mobile {
        align-self: center;
        max-width: 400px;
      }
    }
  }

  .rowWrapper {
    display: flex;
    flex-wrap: wrap; // Ensure wrapping for responsive behavior
    gap: 10px;
    justify-content: space-between;
    align-items: flex-start;

    &.notRowFlex {
      display: block;
    }


    > div { // Direct children of `.rowWrapper`
      flex: 1; // Take up as much space as available
      max-width: calc(50% - 5px); // Adjust for gap, ensuring two elements per row max

      &:first-child:last-child {
        max-width: 100%; // If there's only one child, it takes full width
      }

      input[type='text'], input[type='tel'], textarea, select {
        width: 100%; // Ensure form elements take the full width of their parent
      }


    }


    .fullWidth {
      max-width: unset;
    }

    .confirmation {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
      max-width: unset;
      gap: 25px;
      cursor: pointer;


      p {
        flex: 1;
      }

      @include mobile() {
      }
    }

    .required {
      color: var(--delete);
    }

    .noError, .error {
      display: none; // Default state hidden
      color: var(--delete); // Assuming you have a color variable for errors
      transition: opacity 0.5s ease-in-out;
    }

    .error {
      display: block; // Only show when there's an error
      opacity: 1;
    }
  }

  .submit {
    align-self: center;
    color: white;
    background-color: var(--accent);

    &:disabled {
      background-color: var(--disabled);
    }
  }
}