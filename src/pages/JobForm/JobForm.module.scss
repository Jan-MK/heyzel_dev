@import "../../App.scss";

.availabilityTable {
  border-collapse: separate;
  border-spacing: 0;
  width: 100%;
  max-width: 95vw;
  overflow-x: auto;
  display: block;
  // box-shadow: 0 0 10px rgba(0, 0, 0, 0.1); // Optional: adds shadow around the table
  border-radius: 10px; // Optional: adds rounded corners to the table
  background: var(--form-background-matrix-basic); // Optional: in case your body background isn't white
  margin-bottom: 20px; // Space below the table
  touch-action: initial;

  @include mobile {

    tbody {
      td {
        input[type="checkbox"] {
          max-width: 20px; // Width of the checkbox
          height: 20px; // Height of the checkbox

          &:checked {
            background-color: #007bff; // Change to your preferred color
            border-color: #007bff;
          }

        }
      }
    }

  }

  thead {
    th {
      background-color: var(--form-background-matrix-highlight); // Light grey background for the header
      text-align: left;
      padding: 10px 15px; // Adjust the padding to control the spacing

      &:first-child {
        position: sticky;
        left: 0;
        z-index: 5;
      }
    }
  }

  tbody {
    td {
      padding: 10px 15px; // Aligns with the header padding
      text-align: center; // Center the checkboxes

      &:first-child {
        position: sticky;
        left: 0;
        z-index: 5;
        background-color: var(--form-background-matrix-highlight);
      }

      input[type="checkbox"] {
        z-index: 1;
        -webkit-appearance: none;
        appearance: none;
        margin: 0;
        width: 20px; // Width of the checkbox
        height: 20px; // Height of the checkbox
        border: 1px solid #dcdcdc; // Border color
        border-radius: 4px; // Rounded corners
        transition: background-color 0.2s; // Smooth transition for the check effect

        &:hover {
          cursor: pointer;
        }

        &:checked {
          background-color: #007bff; // Change to your preferred color
          border-color: #007bff;

          &:after {
            content: '';
            display: block;
            position: relative;
            width: 6px;
            height: 11px;
            border: solid white;
            border-width: 0 2px 2px 0;
            transform: translate(-50%, -60%) rotate(45deg);
          }
        }
      }
    }
  }
}


.formContainer {
  display: flex;
  flex-direction: column;
  height: 100dvh;
  max-height: 100%;
  gap: 10px;


  .sectionWrapper {
    flex-grow: 1;
    position: relative; // Establishes a positioning context
    overflow: hidden; // Adjust as needed for your design
    display: flex; // Makes it a flex container
    justify-content: center; // Centers children horizontally
    align-items: center; // Centers children vertically
    width: 100%;


    section.scrollable {
      position: absolute;
      top: auto;
      left: 0;
      width: 100%; // Full width of its parent
      max-height: 100%; // Full height of its parent
      overflow-y: auto; // Makes this element scrollable vertically
      overflow-x: hidden;


      display: flex;
      flex-direction: column;
      justify-content: flex-start;
      align-items: center;

      transition: transform 0.5s cubic-bezier(1.000, 0.000, 0.000, 1.000); // Add transition

      @include mobile {
        display: flex;
        flex-direction: column;
        align-self: flex-start;
        overflow-x: hidden;
      }

      .stepWrapper {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center !important;
        gap: 25px;
        max-width: 100vw;
        padding-left: 5px;
        padding-right: 5px;

        margin-top: auto;
        margin-bottom: auto;

        @include mobile {
          max-width: 100vw;
          justify-content: flex-start !important;
          padding: 5px;
        }

        .fieldWrapper {

        }
      }

      &.left {
        transform: translateX(-100%);
      }

      &.right {
        transform: translateX(100%);
      }

      &.center {
        z-index: 5;
      }


      span.required {
        color: var(--delete);
      }

      .noError, .error {
        display: block;
        transition: opacity 0.5s ease-in-out;
        opacity: 0;
      }

      .error {
        color: var(--delete);
        opacity: 1;
        animation: fadeIn .5s;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
        }
        to {
          opacity: 1;
        }
      }


      div > input,
      div > textarea,
      div > select {
        width: clamp(150px, 30vw, 50vw);
        max-height: 50vh;

        @include mobile {
          width: clamp(150px, 75vw, 90vw);
          max-height: 50vh;
          overscroll-behavior: contain;
        }
      }
      div > textarea {
        max-width: 75vw;

        @include mobile {
          max-width: 90vw;
        }
      }

      div > input[type="checkbox"].cbSmall {
        min-width: initial;
      }

      .availabilityButtons {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        gap: 25px;

        @include mobile {
          width: 100%;
          flex-direction: column;
          justify-content: center;
          align-items: center;
          gap: 15px;
        }

        button {
          &:hover {
            cursor: pointer;
          }

          &:active {
            scale: .99;
          }
        }
      }

      .confirmation {
        display: flex;
        gap: 25px;
        flex-wrap: nowrap;
        align-items: center;
        justify-content: center;
        width: clamp(25vw, 35vw, 50vw);
        padding-left: 15px;
        padding-right: 15px;

        @include mobile {
          width: 100%;
        }

        p {
          flex-grow: 1;
        }

        @include mobile {
          align-items: center;
          justify-content: center;
        }

        input[type='checkbox'] {
          width: 25px;
          @include mobile {
            max-height: unset;
            max-width: unset;
            overscroll-behavior: unset;
          }
        }
      }
    }
  }


  .toPage {
    z-index: 11;
    display: flex;
    justify-content: flex-start;
    align-items: center;
    gap: 15px;
    align-self: flex-start;
    height: 5vh;
    min-height: 40px;
    width: 100%;
    background-color: var(--background);

    a {
      display: flex;
      align-items: center;
      gap: 5px;
      text-decoration: none;

      p {
        font-size: 1.25rem;
      }

      svg {
        width: 1.5rem;
        height: auto;
      }
    }
  }

  .controlBar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: row;
    gap: 50px;

    width: 100%;
    height: 5vh;
    min-height: 75px;
    z-index: 10;

    padding-left: 15px;
    padding-right: 15px;

    @include mobile {
      justify-content: center;
      gap: initial;
      height: 8vh;

      padding-left: unset;
      padding-right: unset;
      min-height: 60px;

      .directNav {
        display: none !important;
        visibility: hidden !important;
      }

      .buttons {
        width: 100%;
        justify-content: space-between;
        gap: initial;

        .ctrlBtn {
          min-width: 35vw;
          cursor: pointer;
        }
      }
    }

    .directNav {
      @include mobile {
        display: none !important;
      }

      .navigationElements {
        display: flex;
        align-items: center;
        gap: 20px;
        width: 50%;

        li {
          font-size: 14px;
          font-weight: 500;
          text-align: center;

          &.current {
            color: var(--accent3);
            cursor: default;
          }

          &.done {
            color: var(--confirm);
            cursor: pointer;
          }

          &.incomplete {
            color: var(--delete);
            cursor: pointer;
          }

          &.open {
            color: var(--disabled);
            cursor: default;
          }
        }
      }
    }

    .buttons {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 20px;

      .ctrlBtn {
        min-width: 150px;
        cursor: pointer;

        &:disabled {
          cursor: not-allowed;
        }
      }
    }
  }

  button.borderlessBtn {
    display: flex;
    align-items: center;
    gap: 5px;
    margin: 0 !important;
    padding: 0 !important;
    background-color: transparent !important;

    &:hover {
      cursor: pointer;
    }

    &:active {
      scale: initial;
    }

    svg {
      width: 25px;
      height: auto;
    }
  }
}